plugins {
  id "com.github.node-gradle.node"
  id 'base'
}

ext.spaBuildDir = "${buildDir}/spa"

configurations{
  spa
  lib
  uiTrellis {
      canBeConsumed(true)
  }
}

dependencies {
    lib project(path: ':rundeckapp:grails-spa:packages:ui-trellis', configuration: 'lib')
    uiTrellis project(path: ':rundeckapp:grails-spa:packages:ui-trellis', configuration: 'packages')
}

node{
    // Whether to download and install a specific Node.js version or not
    // If false, it will use the globally installed Node.js
    // If true, it will download node using above parameters
    // Note that npm is bundled with Node.js
    download = false
    
    // Version of node to download and install (only used if download is true)
    // It will be unpacked in the workDir
    version = "12.16.3"
}


task noop() {
  doLast {
    true
  }
}

tasks.register("runNpmBuild", NpmTask) {
    dependsOn configurations.uiTrellis

    inputs.files(configurations.uiTrellis.files)
    inputs.file 'packages/ui/package.json'
    inputs.file 'packages/ui/package-lock.json'
    inputs.file 'packages/ui/babel.config.js'
    inputs.file 'packages/ui/vue.config.js'
    inputs.file 'packages/ui/tsconfig.json'
    inputs.file 'packages/ui/.env.development'
    inputs.file 'packages/ui/.env.production'

    inputs.dir 'packages/ui/src'

    outputs.dir(file("$spaBuildDir"))
    outputs.cacheIf { true }

    def npmCommand = System.env.CI ?
      'ci:build' :
      'dev:build'

    args = ['run', npmCommand]

    execOverrides {
      it.workingDir = './packages/ui'
    }
}

assemble.dependsOn runNpmBuild

artifacts {
  spa(file: file(spaBuildDir), name: "${project.name}", type: 'directory', builtBy: runNpmBuild)
}

